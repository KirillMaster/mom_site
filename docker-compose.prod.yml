version: '3.8'

services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mom_site_api_prod
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=188.225.75.81;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - JWT__Secret=${JWT_SECRET}
      - JWT__Issuer=${JWT_ISSUER:-mom-site}
      - JWT__Audience=${JWT_AUDIENCE:-mom-site}
      - AdminPassword=${ADMIN_PASSWORD}
      # Email SMTP Configuration
      - EMAIL_SMTP_SERVER=${EMAIL_SMTP_SERVER:-smtp.gmail.com}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@angelamoiseenko.ru}
      - EMAIL_TO=${EMAIL_TO:-karangela@narod.ru}
      # S3 Storage Configuration
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_SERVICE_URL=${S3_SERVICE_URL:-https://s3.twcstorage.ru}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_BASE_URL=${S3_BASE_URL}
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["dotnet", "ef", "database", "update"]
    networks:
      - mom_site_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mom_site_frontend_prod
    environment:
      - NEXT_PUBLIC_API_URL=https://angelamoiseenko.ru/api
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mom_site_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile.simple
    container_name: mom_site_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${SSL_CERT_PATH}:/etc/ssl/certs/certificate.crt:ro
      - ${SSL_KEY_PATH}:/etc/ssl/private/private.key:ro
    depends_on:
      - frontend
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mom_site_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

networks:
  mom_site_network:
    driver: bridge
